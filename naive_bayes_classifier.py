# -*- coding: utf-8 -*-
"""Naive Bayes Classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JZq4UHlU_P8FSRgSA9RGpN_wPA3yDJyC

# PROGRAM STATEMENT

Write a program to implement Naive Bayes Classification on given data set to design a model that can predict whether player will play on a given day on the basis of the provided features.

# CODE
"""

# The dataset in the form of lists
# weather, outlook, humidity, wind are features
# play is the target
weather=['Sunny','Sunny','Overcast','Rainy','Rainy','Rainy','Overcast',
         'Sunny','Sunny','Rainy','Sunny','Overcast','Overcast','Rainy']
outlook=['Hot','Hot','Hot','Mild','Cool','Cool','Cool','Mild','Cool',
         'Mild','Mild','Mild','Hot','Mild']
play=['No','No','Yes','Yes','Yes','No','Yes','No','Yes','Yes',
      'Yes','Yes','Yes','No']
humidity=['High', 'High','High','High','Normal','Normal','Normal',
          'High','Normal','Normal','Normal','High','Normal','High' ]
wind=['Weak','Strong','Weak','Weak','Weak','Strong','Strong',
      'Weak','Weak','Weak','Strong','Strong','Weak','Strong']

# Now we have to convert this lists into numpy arrays
# So we need Label Encoding
# Import LabelEncoder
from sklearn import preprocessing
# creating LabelEncoder
le = preprocessing.LabelEncoder()

# Label Encoding for the feature Weather
wthr_encoded = le.fit_transform(weather)
print("The classes are: ", le.classes_)
print("The encoded array is: ", wthr_encoded)

# Label Encoding for the feature Outlook
otlk_encoded = le.fit_transform(outlook)
print("The classes are: ", le.classes_)
print("The encoded array is: ", otlk_encoded)

# Label Encoding for the feature Humidity
hdty_encoded = le.fit_transform(humidity)
print("The classes are: ", le.classes_)
print("The encoded array is: ", hdty_encoded)

# Label Encoding for the feature Wind
wind_encoded = le.fit_transform(wind)
print("The classes are: ", le.classes_)
print("The encoded array is: ", wind_encoded)

# Label Encoding for the target
y = le.fit_transform(play)
print("The classes are: ", le.classes_)
print("The encoded array is: ", y)

# Now we have to merge the four features into one array
zipped = zip(wthr_encoded, otlk_encoded, hdty_encoded, wind_encoded)

# zipped is an object we have to convert it to list
import numpy as np
X = np.array(list(zipped)).tolist()

print("The features set: ")
X

# Splitting X and y into training and testing sets
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,
                                               test_size=0.4, random_state=10)

print('Testing set of features: ', X_test)
print('Training set of target: ', y_train)
print('Testing set of target: ', y_test)
print('Training set of features: ')
X_train

# Importing the Naive Bayes Model
from sklearn.naive_bayes import CategoricalNB
# instantiating the classifier
model = CategoricalNB()
# Fitting classifier to training set
model.fit(X_train, y_train)

# Make predictions on test set
y_pred = model.predict(X_test)

# importing metrics to calculate accuracy score
from sklearn import metrics
print("The accuracy score is: ", metrics.accuracy_score(y_test, y_pred))

# Classification Report
print(metrics.classification_report(y_test, y_pred))

# Confusion Matrix
print(metrics.confusion_matrix(y_test, y_pred))

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !wget -nc https://raw.githubusercontent.com/brpy/colab-pdf/master/colab_pdf.py
# from colab_pdf import colab_pdf
# colab_pdf('Naive Bayes Classifier.ipynb')